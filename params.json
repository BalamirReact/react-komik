{"name":"React Komik","tagline":"ReactJS based comic strip creator using fabric.js canvas rendering","body":"# React Komik!\r\n\r\nReactJS based comic strip creator using [fabric.js](http://fabricjs.com/) canvas rendering. It's like [spectacle](https://github.com/FormidableLabs/spectacle) but for comic. You can edit (positioning, scaling, coloring) the comic after rendering. Reactify anything, reactify comic.\r\n\r\n![react-komik](http://sonnylazuardi.github.io/react-komik/dist/logo_big.png)\r\n\r\n![jscomic](https://lh3.googleusercontent.com/-J-FI1QCR8Ic/VnzBfXnWU7I/AAAAAAAACC0/rnfb6O9iiDw/s0/jskomik2.gif \"jskomik2.gif\")\r\n\r\n# Usage\r\n\r\n## NPM modules\r\n\r\nJust install it from npm\r\n\r\n\tnpm install react-komik\r\n\r\nYou can use the component by require it and bundle it with webpack or browserify.\r\nDon't forget to import React, ReactDOM, and use Babel/JSX transformer with ES2015 (recommended)\r\n\r\n```language-javascript\r\n\timport React from 'react';\r\n\timport { render } from 'react-dom';\r\n\timport { Strip, Panel, Character, Balloon } from 'react-komik';\r\n\r\n\tlet Comic = (props) => (\r\n\t\t<Strip title=\"Your title here\" column=\"1\">\r\n\t\t\t<Panel>\r\n\t\t\t\t<Character\r\n\t\t\t\t\timage=\"char.png\">\r\n\t\t\t\t\t<Balloon \r\n\t\t\t\t\t\ttext=\"Reactify Comic!\" />\r\n\t\t\t\t</Character>\r\n\t\t\t</Panel>\r\n\t\t</Strip>\r\n\t);\r\n\r\n\trender(<Comic />, document.getElementById('root'));\r\n```\r\n\r\n## UMD Browser\r\n\r\nDownload or include the [komik.js](http://sonnylazuardi.github.io/react-komik/dist/komik.js) file to your HTML. \r\nDon't forget to include React, ReactDOM and JSX transformer/Babel.\r\nPlease use NPM modules instead for production.\r\n\r\n```language-html\r\n\t<script src=\"http://sonnylazuardi.github.io/react-komik/dist/komik.js\"></script>\r\n\t<script>\r\n\t\tlet { Strip, Panel, Character, Balloon } = Komik;\r\n\r\n\t\tclass Comic extends React.Component {\r\n\t\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Strip title=\"Your title here\" column=\"1\">\r\n\t\t\t\t\t\t<Panel>\r\n\t\t\t\t\t\t\t<Character\r\n\t\t\t\t\t\t\t\timage=\"char.png\">\r\n\t\t\t\t\t\t\t\t<Balloon \r\n\t\t\t\t\t\t\t\t\ttext=\"Reactify Comic!\" />\r\n\t\t\t\t\t\t\t</Character>\r\n\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t</Strip>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tReactDOM.render(<Comic />, document.getElementById('root'));\r\n\t</script>\r\n```\r\n\r\n# Demo\r\n\r\nThis demo is using UMD browser, hosted on codepen and jsbin.\r\n\r\nhttp://codepen.io/sonnylazuardi/pen/JGKmGE\r\n\r\nhttp://jsbin.com/zaxabi/edit?html,js,output\r\n\r\n# Components\r\n\r\nThere are four main components:\r\n\r\n## Strip\r\n\r\nAttribute | Value Type | Default | Description\r\n--------- | ---------- | ------- | -----------\r\ntitle | String | \"Comic Title\" | Your comic title\r\ncolumn | Integer | 2 | Number of comic's column\r\npadding | Integer | 0 | Comic padding\r\nwidth | Integer | 500 | Comic's width\r\nheight | Integer | 500 | Comic's height\r\ntop | Integer | 0 | Comic's top position\r\nleft | Integer | 0 | Comic's left position\r\nfill | String (Color) | 'white' | Comic's background color\r\nstroke | String (Color) | 'black' | Comic's stroke color\r\nstrokeWidth | Integer | 0 | Comic's stroke width\r\nfontFamily | String (Font Name) | \"Arial\" | Comic's font family\r\nfontSize | Integer | 13 | Comic's font size\r\nupperCase | Boolan | false | Comic's text upper case\r\n\r\n## Panel\r\n\r\nAttribute | Value Type | Default | Description\r\n--------- | ---------- | ------- | -----------\r\nheight | Integer | 180 | Panel's height\r\npadding | Integer | 20 | Panel's padding\r\nfill | String (Color) | 'white' | Panel's background color\r\nstroke | Integer | 'black' | Panel's stroke color\r\nstrokeWidth | Integer | 3 | Panel's stroke width\r\nbackground | String (Image URL) | null | Panel's background image\r\n\r\n## Character\r\n\r\nAttribute | Value Type | Default | Description\r\n--------- | ---------- | ------- | -----------\r\nimage | String (Image URL) | 'char1.png' | Character's image\r\nscale | Decimal (0 - 1) | 1 | Character's image scale\r\nalign | String ('center', 'right', 'left') | 'center' | Character's align position\r\nleft | Integer | null | Character's left position (will overwrite align)\r\nbottom | Integer | 0 | Character's bottom position \r\ntop | Integer | null | Character's top position (will overwrite bottom position)\r\n\r\n## Balloon\r\n\r\nAttribute | Value Type | Default | Description\r\n--------- | ---------- | ------- | -----------\r\ntext | String | 'Hi Bro!' | Balloon's text\r\nimage | String (SVG URL) | 'chat_right.svg' | Chat balloon SVG images\r\nleft | Integer | null | Balloon's left position\r\nbottom | Integer (from Character's top) | -70 | Balloon's bottom position\r\ntop | Integer | null | Balloon's top position (will overwrite bottom)\r\nscale | Decimal (0 - 1) | 0.8 | Balloon's image scale\r\nalign | String ('center', 'left', 'right') | 'left' | Balloon's align from character\r\npadding | Integer | 12 | Balloon's text padding\r\nheight | Integer | 150 | Balloon's height\r\ntextAlign | String ('center', 'left', 'right') | 'center' | Balloon's text align\r\nfontFamily | String (Font Name) | (The same with Strip's fontFamily) | Balloon's font family\r\nfontSize | Integer | (The same with Strip's fontSize) | Balloon's font size\r\n\r\n# Contributing\r\n\r\nIdeas, issues, and PRs are welcomed. You can also directly shoot me an email at sonnylazuardi@gmail.com.\r\n\r\n# JS Comic\r\n\r\nThis project is actually an effort to write comic easier for [JS Comic](http://jscomic.net). Please follow [@jscomicnet](https://twitter.com/jscomicnet) or like [JS Comic FB page](https://facebook.com/jscomicnet).\r\n\r\n# License\r\n\r\nMIT @sonnylazuardi","google":"UA-71729816-1","note":"Don't delete this file! It's used internally to help with page regeneration."}